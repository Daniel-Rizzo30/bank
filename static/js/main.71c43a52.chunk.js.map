{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","className","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Credits","event","checked","creditsView","credits","map","credit","date","slice","descriptionToCaps","description","toUpperCase","amount","id","Date","currentId","toISOString","updateId","addCredit","placeholder","Debits","debitsView","debits","debit","addDebit","App","console","log","newCredits","push","newAccountBalance","newDebits","logInInfo","newUser","currentUser","a","linkToCreditAPI","axios","get","responseDebit","responseCredit","i","balance","data","length","Math","round","response","status","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71c43a52.chunk.js","sourcesContent":["// src/components/AccountBalance.js\n\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  render() {\n    return (\n        <div className=\"balance\">\n          Balance: {this.props.accountBalance}\n        </div>\n    );\n  }\n}\n\nexport default AccountBalance;","// src/components/Home.js\n// The Home component is used to demonstrate the use of Link.\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n        <div>\n          <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n          <h1>Bank of React</h1>\n\n          <Link to=\"/bank/userProfile\">User Profile</Link>\n          <br/>\n          <Link to=\"/bank/login\">Login</Link>\n          <br/>\n          <Link to=\"/bank/credits\">Credits</Link>\n          <br/>\n          <Link to=\"/bank/debits\">Debits</Link>\n          \n          <AccountBalance accountBalance={this.props.accountBalance}/>\n        </div>\n    );\n  }\n}\n\nexport default Home;","// src/components/UserProfile.js\n// The UserProfile component is used to demonstrate the use of Route and Link.\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n        <div>\n          <h1>User Profile</h1>\n\n          <div className='profile'>Username: {this.props.userName}</div>\n          <div className='profile'>Member Since: {this.props.memberSince}</div>\n          \n          <Link to=\"/bank/\">Return to Home</Link>\n        </div>\n    );\n  }\n}\n\nexport default UserProfile;","// src/components/Login.js\n// The LogIn component is used to demonstrate the use of Redirect.\n\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nclass LogIn extends Component {\n  constructor () {  // Create and initialize state\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  // When the user name input is changed, capture the input and update the state (user.userName)\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n  \n  render () {\n    <img src=\"https://picsum.photos/200/200\" alt=\"login\"/>\n    if (this.state.redirect) {  // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n      return (<Redirect to=\"/bank/userProfile\"/>)\n    }\n    // Render the login form\n    return (\n      <div>\n        <h1>Login</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>                  \n      </div>\n    )\n  }\n}\n\nexport default LogIn","// src/components/Credits.js\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nclass Credits extends Component {\n  constructor(props) { // Create and initialize state\n    super(props); // Always do super()\n    this.state = {\n      description: \"\",\n      amount: 0,\n    }\n  }\n\n  handleChange = (event) => {\n    const {name, value, type, checked} = event.target\n    // if the type just grabbed from the event is a checkbox, set the name of the event, \n    // which is named after an element in the state - so the element in the state - to \n    // the boolean checked, otherwise set [name], in state, to the value grabbed. \n    type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\n  }  \n\n  // List out the credit posts from the array from props onto the page\n\tcreditsView  = () => {\n    let credits = this.props.credits; // Grab from props the array, must be created with \"let\"\n    let list = credits.map( (credit) => { // Use map to list each credit item\n      let date = credit.date.slice(0,10); // Get the first ten chars of the date \n      // Give map a list item, with key using the id, which lists the other values\n      let descriptionToCaps = credit.description.toUpperCase(); // Display in all caps like a bank usually does\n      return (\n        <li key={credit.id}>${credit.amount}&emsp;&emsp;{descriptionToCaps}&emsp;on:&emsp;{date}</li>\n      );\n    });\n    return list;\n  }\n\n  handleSubmit = (event) =>  {\n    event.preventDefault(); // Stop page refresh\n    let credit = { // Add attributes to credit\n      amount: this.state.amount,\n      description: this.state.description,\n      date: new Date(),\n      id: this.props.currentId\n    };\n    credit.date = credit.date.toISOString(); // Turn into the string used in the API\n    this.props.updateId(); // Make sure each ID is unique\n    this.props.addCredit(credit); // Finally add to the debt from App.js\n    this.setState({description: \"\", amount: 0}); // Reset state\n  }\n\n  render() {\n    return (\n    \t<div>\n         <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n    \t   <h1>Credits</h1>\n         <h2>{this.props.userName}</h2>\n          <AccountBalance accountBalance={this.props.accountBalance}/>\n          {/* Make a form, which uses handleSubmit to access the props functions from App.js */}  \n           <form onSubmit={this.handleSubmit}>\n             <input \n             type=\"text\" \n             name=\"description\"\n             placeholder='Description' // Add a placeholder that tells the user what to input\n             value={this.state.description} // Keep the value in state\n             onChange={this.handleChange} // Change state when the value changes\n             />\n             <input \n             type=\"float\" \n             name=\"amount\"\n             placeholder='Amount'\n             value={this.state.amount}\n             onChange={this.handleChange}  \n             />\n             <button type=\"submit\">Add Credit</button>\n           </form>\n\n          <ul> \n            {this.creditsView()} \n            {/* Must put this function within a list, as it only returns list items */}\n          </ul>\n\n           <Link to=\"/bank/\">Return to Home</Link>\n    \t</div>\n    );\n  }\n}\nexport default Credits;","// src/components/Debits.js\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nclass Debits extends Component {\n  constructor(props) { // Create and initialize state\n    super(props); // Always do super()\n    this.state = {\n      description: \"\",\n      amount: 0,\n    }\n  }\n\n  handleChange = (event) => {\n    const {name, value, type, checked} = event.target\n    // if the type just grabbed from the event is a checkbox, set the name of the event, \n    // which is named after an element in the state - so the element in the state - to \n    // the boolean checked, otherwise set [name], in state, to the value grabbed. \n    type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\n  }  \n\n  // List out the debit posts from the array from props onto the page\n\tdebitsView  = () => {\n    let debits = this.props.debits; // Grab from props the array, must be created with \"let\"\n    let list = debits.map( (debit) => { // Use map to list each debit item\n      let date = debit.date.slice(0,10); // Get the first ten chars of the date \n      // Give map a list item, with key using the id, which lists the other values\n      let descriptionToCaps = debit.description.toUpperCase(); // Display in all caps like a bank usually does\n      return (\n        <li key={debit.id}>${debit.amount}&emsp;&emsp;{descriptionToCaps}&emsp;on:&emsp;{date}</li>\n      );\n    });\n    return list;\n  }\n\n  handleSubmit = (event) =>  {\n    event.preventDefault(); // Stop page refresh\n    let debit = { // Add attributes to debit\n      amount: this.state.amount,\n      description: this.state.description,\n      date: new Date(),\n      id: this.props.currentId\n    };\n    debit.date = debit.date.toISOString(); // Turn into the string used in the API\n    this.props.updateId(); // Make sure each ID is unique\n    this.props.addDebit(debit); // Finally add to the debt from App.js\n    this.setState({description: \"\", amount: 0}); // Reset state\n  }\n\n  render() {\n    return (\n    \t<div>\n         <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n    \t   <h1>Debits</h1>\n         <h2>{this.props.userName}</h2>\n          <AccountBalance accountBalance={this.props.accountBalance}/>\n          {/* Make a form, which uses handleSubmit to access the props functions from App.js */}  \n           <form onSubmit={this.handleSubmit}>\n             <input \n             type=\"text\" \n             name=\"description\"\n             placeholder='Description' // Add a placeholder that tells the user what to input\n             value={this.state.description} // Keep the value in state\n             onChange={this.handleChange} // Change state when the value changes\n             />\n             <input \n             type=\"number\" \n             name=\"amount\"\n             placeholder='Amount'\n             value={this.state.amount}\n             onChange={this.handleChange}  \n             />\n             <button type=\"submit\">Add Debit</button>\n           </form>\n\n          <ul>\n            {this.debitsView()}\n            {/* Must put this function within a list, as it only returns list items */}\n          </ul>\n\n           <Link to=\"/bank/\">Return to Home</Link>\n    \t</div>\n    );\n  }\n}\nexport default Debits;","// src/App.js\n\nimport React, {Component} from 'react';\nimport axios from 'axios';// Library used to send asynchronous HTTP requests to RESTful endpoints (APIs)\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './components/Home.js';\nimport UserProfile from './components/UserProfile.js';\nimport LogIn from './components/Login.js';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0.0,\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '07/23/96',\n      },\n      credits: [],\n      debits: [],\n      currentId: 0,\n    }\n  }\n\n  // Make async API call to retrieve data from remote website\n  async componentDidMount() {\n    let linkToDebitAPI = 'https://moj-api.herokuapp.com/debits';  // Link to remote website API for Debit\n    let linkToCreditAPI = 'https://moj-api.herokuapp.com/credits';  // Link to remote website API for Credit\n    // API is of the form - {\"id\":\"\",\"description\":\"\",\"amount\": <number>,\"date\":\"\"}\n\n    // Await for promise (completion) returned from API call\n    try {  // Accept success response as array of JSON objects (users)\n      let responseDebit = await axios.get(linkToDebitAPI);\n      let responseCredit = await axios.get(linkToCreditAPI);\n      let i = 0;\n      let balance = 0;\n      console.log(responseDebit.data);  // Print out responses\n      console.log(responseCredit.data); \n      // To get data object in the response, need to use \"response.data\"\n      for(i = 0; i < responseCredit.data.length; i++) {\n        console.log(responseCredit.data[i].amount);\n        balance = balance + + responseCredit.data[i].amount;\n      }\n      for(i = 0; i < responseDebit.data.length; i++) {\n        console.log(responseDebit.data[i].amount);\n        balance = balance - responseDebit.data[i].amount;\n      }\n      balance = Math.round(balance * 100) / 100; // Use Math function to round to 2 decimal places\n      this.setState({credits: responseCredit.data, \n                     debits: responseDebit.data, \n                     accountBalance: balance});  // Store received data in state's object\n\n    } \n    catch (error) {  // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\n      }    \n    }\n  }\n  \n  // Function to update credit array and update accountBalance\n  // Should be passed down into credit component and should most likely be awaited ? \n  addCredit = (credit) => {\n    console.log(\"addCredit\"); // Show that the function began\n    let newCredits = this.state.credits; // Copy old array\n    newCredits.push(credit); // Add new posted value\n    let newAccountBalance = this.state.accountBalance; // Copy old account balance\n    newAccountBalance = newAccountBalance + + credit.amount; // Add more credit \n    // Needed to force math addition above with double + + for some reason\n    this.setState({credit: newCredits, \n                   accountBalance:  newAccountBalance}); // Set new state values\n    console.log(this.state.credits); // Check that it worked\n  }\n\n  // Function to update debit array and update accountBalance\n  // Should be passed down into debit component and should most likely be awaited ? \n  addDebit = (debit) => {\n    console.log(\"addDebit\"); // Show that the function began\n    let newDebits = this.state.debits; // Copy old array\n    newDebits.push(debit); // Add new posted value\n    let newAccountBalance = this.state.accountBalance; // Copy old account balance\n    newAccountBalance -= debit.amount; // Add more debit by subtracting the amount\n    this.setState({debit: newDebits, \n                   accountBalance: newAccountBalance}); // Set new state values\n    console.log(this.state.debits); // Check that it worked\n  }\n\n  updateId = () => {\n    this.setState({currentId: this.state.currentId + 1}); // Increment by 1 to get a new ID\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\n    const UserProfileComponent = () => (\n        <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}/>\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} \n                                         mockLogIn={this.mockLogIn}\n                                         />);  // Pass props to \"LogIn\" component\n    const DebitComponent = () => (<Debits debits={this.state.debits} \n                                          addDebit={this.addDebit} \n                                          accountBalance={this.state.accountBalance} \n                                          currentId={this.state.currentId}\n                                          updateId={this.updateId}\n                                          userName={this.state.currentUser.userName}\n                                          />); // Added props to pass debits, acctBalance and addDebit function\n    const CreditComponent = () => (<Credits credits={this.state.credits} \n                                            addCredit={this.addCredit} \n                                            accountBalance={this.state.accountBalance} \n                                            currentId={this.state.currentId}\n                                            updateId={this.updateId}\n                                            userName={this.state.currentUser.userName}\n                                            />); // Added props to pass credits, acctBalance and addCredit function\n\n    return (\n        <Router>\n          <div>\n            <Route exact path=\"/bank/\" render={HomeComponent}/>\n            <Route exact path=\"/bank/userProfile\" render={UserProfileComponent}/>\n            <Route exact path=\"/bank/login\" render={LogInComponent}/>\n            <Route exact path=\"/bank/credits\" render={CreditComponent}/>\n            <Route exact path=\"/bank/debits\" render={DebitComponent}/>\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}